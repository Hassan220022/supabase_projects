#!/bin/bash

# {{ project_name }} - Supabase Project Startup Script
# Generated by Supabase Project Generator

set -e

PROJECT_NAME="{{ project_name }}"
PROJECT_PATH="{{ project_path }}"
MACHINE_IP="{{ machine_ip }}"

echo "=========================================="
echo "  Starting Supabase Project: $PROJECT_NAME"
echo "=========================================="
echo ""

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Error: Docker is not running. Please start Docker first."
    exit 1
fi

# Check if docker-compose file exists
if [ ! -f "$PROJECT_PATH/docker-compose.yml" ]; then
    echo "‚ùå Error: docker-compose.yml not found at $PROJECT_PATH"
    exit 1
fi

# Change to project directory
cd "$PROJECT_PATH"

# Create necessary directories
echo "üìÅ Creating project directories..."
mkdir -p storage functions

# Pull latest images
echo "üê≥ Pulling latest Docker images..."
docker compose pull

# Start services
echo "üöÄ Starting Supabase services..."
docker compose up -d

# Wait for services to be healthy
echo "‚è≥ Waiting for services to be healthy..."
sleep 10

# Check service health
echo "üîç Checking service status..."

services=("studio" "kong" "auth" "rest" "realtime" "storage" "meta" "functions" "analytics" "vector")
healthy_services=0

for service in "${services[@]}"; do
    if docker compose ps "$service" | grep -q "Up"; then
        echo "  ‚úÖ $service: Running"
        ((healthy_services++))
    else
        echo "  ‚ùå $service: Not running"
    fi
done

echo ""
echo "=========================================="
echo "  üéâ Supabase Project Status"
echo "=========================================="
echo "Project Name: $PROJECT_NAME"
echo "Services Running: $healthy_services/${#services[@]}"
echo ""
echo "üåê Access URLs:"
echo "  Studio:    http://$MACHINE_IP:{{ ports.studio }}"
echo "  API:       http://$MACHINE_IP:{{ ports.kong }}"
echo "  Auth:      http://$MACHINE_IP:{{ ports.auth }}"
echo "  Rest:      http://$MACHINE_IP:{{ ports.rest }}"
echo "  Realtime:  http://$MACHINE_IP:{{ ports.realtime }}"
echo "  Storage:   http://$MACHINE_IP:{{ ports.storage }}"
echo "  Meta:      http://$MACHINE_IP:{{ ports.meta }}"
echo "  Functions: http://$MACHINE_IP:{{ ports.functions }}"
echo "  Analytics: http://$MACHINE_IP:{{ ports.analytics }}"
echo "  Vector:    http://$MACHINE_IP:{{ ports.vector }}"
echo ""
echo "üîë API Keys:"
echo "  Anon Key:    {{ anon_key }}"
echo "  Service Key: {{ service_key }}"
echo ""
echo "üóÑÔ∏è Database Configuration:"
echo "  Host: {{ db_config.host }}"
echo "  Port: {{ db_config.port }}"
echo "  Database: {{ project_name }}"
echo "  User: {{ db_config.user }}"
echo ""
echo "üìã Management Commands:"
echo "  Stop:    docker compose down"
echo "  Restart: docker compose restart"
echo "  Logs:    docker compose logs -f"
echo "  Status:  docker compose ps"
echo ""

if [ $healthy_services -eq ${#services[@]} ]; then
    echo "‚úÖ All services are running successfully!"
    echo "üéØ You can now access Supabase Studio at: http://$MACHINE_IP:{{ ports.studio }}"
else
    echo "‚ö†Ô∏è  Some services may not be running properly."
    echo "   Run 'docker compose logs' to check for errors."
fi

echo ""
echo "=========================================="